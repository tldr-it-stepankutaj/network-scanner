name: Build & Release

on:
  push:
    tags:
      - 'v*'
jobs:
  build-linux:
    runs-on: ubuntu-22.04
    name: Build on Linux

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake g++ dpkg-dev rpm ruby ruby-dev rubygems build-essential
          sudo gem install --no-document fpm

      - name: Configure & build
        run: |
          cmake -B build -DCMAKE_INSTALL_PREFIX=/usr
          cmake --build build --parallel
          cmake --install build --prefix dist/usr

      - name: Create tar.gz
        run: |
          tar -czvf network-scanner-linux.tar.gz -C dist .

      - name: Create DEB package
        run: |
          mkdir -p pkg-deb/DEBIAN
          echo "Package: network-scanner
          Version: ${GITHUB_REF_NAME#v}
          Section: utils
          Priority: optional
          Architecture: amd64
          Maintainer: Stepan Kutaj <stepan.kutaj@tldr-it.com>
          Description: Fast ICMP/TCP ping sweep scanner" > pkg-deb/DEBIAN/control
          cp -r dist/* pkg-deb/
          dpkg-deb --build pkg-deb network-scanner-${GITHUB_REF_NAME#v}.deb

      - name: Create RPM package directly
        run: |
          fpm -s dir -t rpm \
            -n network-scanner \
            -v ${GITHUB_REF_NAME#v} \
            -p network-scanner-${GITHUB_REF_NAME#v}.rpm \
            --rpm-rpmbuild-define "_build_id_links none" \
            --rpm-rpmbuild-define "_binary_payload w9.gzdio" \
            --rpm-rpmbuild-define "_binary_filedigest_algorithm 1" \
            --rpm-rpmbuild-define "_source_filedigest_algorithm 1" \
            --rpm-os linux \
            --rpm-auto-add-directories \
            --no-rpm-sign \
            --rpm-digest sha1 \
            -C dist \
            usr

      - uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-linux
          path: |
            network-scanner-linux.tar.gz
            *.deb
            *.rpm

  release:
    name: Create GitHub Release
    needs:
      - build-linux
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-artifacts-linux
          path: artifacts

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: artifacts/*
          body: |
            ðŸš€ New release ${{ github.ref_name }} of network-scanner
            - Includes Linux binaries
            - DEB & RPM packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}